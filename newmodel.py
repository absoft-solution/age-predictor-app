import numpy as np
import cv2 
import streamlit as st
import pickle
from keras.utils import load_img, img_to_array


with open('svm_model.pkl', 'rb') as svm:
    modelsvm = pickle.load(svm)
with open('LBP_Model.pkl', 'rb') as lbp:
    modellbp = pickle.load(lbp)  

st.title('Age Predictor App')
uploader = st.file_uploader('Select image', type=('jpg', 'png'))
selected_option = st.selectbox('Select a Model (For testing your image)', ['SVM', 'LBP'])
if uploader is not None:
    img = load_img(uploader, target_size=(100, 100), color_mode='grayscale')   
    img_array = img_to_array(img)
    img_flatten = img_array.flatten()

    # Reshape the array to 2D
    img_flatten_2d = img_flatten.reshape(1, -1)
    if 'SVM' in selected_option:
        svm_res = modelsvm.predict(img_flatten_2d)
        if svm_res == 0:
            st.write("You are at your old age... Wish you a happy life")
            st.image(img)
        elif svm_res==1:
            st.write("You are young! Enjoy your life")
            st.image(img)
        else:
            st.write("You are still a kiddo! Time to play")
            st.image(img)
        st.write("Result was generated by SVM ")

    if 'LBP' in selected_option:
        lbp_res = modellbp.predict(img_flatten_2d)
        if lbp_res == 0:
            st.write("You are at your old age... Wish you a happy life")
            st.image(img)
        elif lbp_res==1:
            st.write("You are young! Enjoy your life")
            st.image(img)
        else:
            st.write("You are still a kiddo! Time to play")
            st.image(img)
        st.write("Result was generated by LBP ")

#App to remove backgroung from picture.
st.header('Remove Picture Backgroung')
rbuploader = st.file_uploader('Select image', type=( 'png','jpj','jpeg'))
st.write("Before") 
if uploader is not None:
    imgrb = load_img(rbuploader, target_size=(50, 50), color_mode='grayscale')  
    st.image(rbuploader)

    
    
    
    
    
    












    
    # if 'HOG' in selected_option:
    #     hog_res = modelhog.predict(img_flatten_2d)
    #     if hog_res == 0:
    #         st.write("You are at your old age... Wish you a happy life")
    #         st.image(img)
    #     elif hog_res==1:
    #         st.write("You are young! Enjoy your life")
    #         st.image(img)
    #     else:
    #         st.write("You are still a kiddo! Time to play")
    #         st.image(img)
    #     st.write("Result was generated by HOG")